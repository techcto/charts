apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Release.Name }}-mysql
spec:
  serviceName: {{ .Release.Name }}-mysql
  selector:
    matchLabels:
      app: {{ .Release.Name }}-mysql
  replicas: 1
  template:
    metadata:
      labels:
        app: {{ .Release.Name }}-mysql
    spec:
      affinity:
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Release.Name }}-mysql
            topologyKey: "kubernetes.io/hostname"
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - key: app
                operator: In
                values:
                - {{ .Release.Name }}-redis
            topologyKey: "kubernetes.io/hostname"
      containers:
      - name: {{ .Release.Name }}-mysql
        image: {{ .Values.mysql.image.registry }}/{{ .Values.mysql.image.repository }}:{{ .Values.mysql.image.tag }}
        args:
        - --sql_mode=
        - --ignore-db-dir=lost+found
        env:
        - name: MYSQL_DATABASE
          value: {{ .Values.solodev.settings.dbName }}
        - name: MYSQL_ROOT_PASSWORD
          value: {{ .Values.solodev.settings.dbPassword }}
        - name: MYSQL_USER
          value: {{ .Values.solodev.settings.dbUser }}
        - name: MYSQL_PASSWORD
          value: {{ .Values.solodev.settings.dbPassword }}
        ports:
        - name: mysql
          containerPort: {{ .Values.mysql.port }}
        volumeMounts:
        - name: {{ .Release.Name }}-pv
          mountPath: /var/lib/mysql
        - name: conf
          mountPath: /etc/mysql/conf.d
        resources:
          requests:
            memory: 128Mi
            cpu: 50m
          limits:
            memory: "256Mi"
            cpu: "100m"
        livenessProbe:
          exec:
            command: ["mysqladmin", "ping"]
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          successThreshold: 1
          failureThreshold: 3
        readinessProbe:
          exec:
            command: ["mysql", "-h", "127.0.0.1", "-u", "root", "-p{{ .Values.solodev.settings.dbPassword }}", "-e", "SELECT 1"]
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 1
          successThreshold: 1
          failureThreshold: 3
      volumes:
      - name: conf
        emptyDir: {}
      - name: config-map
        configMap:
          name: {{ .Release.Name }}-mysql
      - name: {{ .Release.Name }}-pv
        persistentVolumeClaim:
          claimName: {{ .Release.Name }}-mysql